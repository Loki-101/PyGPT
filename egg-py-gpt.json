{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2023-11-06T17:36:09-08:00",
    "name": "PyGPT",
    "author": "loki@crazycoder.dev",
    "description": null,
    "features": null,
    "docker_images": {
        "ghcr.io\/loki-101\/yolks:pypy_3.10": "ghcr.io\/loki-101\/yolks:pypy_3.10"
    },
    "file_denylist": [],
    "startup": "if [[ -d .git ]] && [[ \"0\" == \"1\" ]]; then git pull; fi; if [[ ! -z \"\" ]]; then \/opt\/pypy\/bin\/pip install -U --prefix .local ; fi; if [[ -f \/home\/container\/${REQUIREMENTS_FILE} ]]; then \/opt\/pypy\/bin\/pip install -U --prefix .local -r ${REQUIREMENTS_FILE}; fi; \/opt\/pypy\/bin\/pypy \/home\/container\/app.py",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Bot Name\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# Python App Installation Script using PyPy\r\n#\r\n# Server Files: \/mnt\/server\r\napt update\r\napt install -y git curl jq file unzip make gcc g++ libtool\r\n# Create the server directory if it doesn't exist\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\necho \"Installing latest version of PyGPT from Github repo \\\"https:\/\/github.com\/Loki-101\/PyGPT\\\"\"\r\n# Download the latest app.py and requirements.txt from the PyGPT GitHub releases\r\ncurl -LJO \"https:\/\/github.com\/Loki-101\/PyGPT\/releases\/latest\/download\/app.py\"\r\ncurl -LJO \"https:\/\/github.com\/Loki-101\/PyGPT\/releases\/latest\/download\/requirements.txt\"\r\n# Set the HOME environment variable to the server directory\r\nexport HOME=\/mnt\/server\r\necho \"Installing python requirements into folder\"\r\n# Install any additional packages specified in the PY_PACKAGES environment variable\r\nif [[ ! -z ${PY_PACKAGES} ]]; then\r\n\/opt\/pypy\/bin\/pip install -U --prefix .local ${PY_PACKAGES}\r\nfi\r\n# Install the requirements from the requirements.txt file if it exists\r\nif [ -f \/mnt\/server\/requirements.txt ]; then\r\n\/opt\/pypy\/bin\/pip install -U --prefix .local -r \/mnt\/server\/requirements.txt\r\nfi\r\necho -e \"Installation is now Complete.\"\r\nexit 0",
            "container": "pypy:3.10-7.3.13-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "App py file",
            "description": "The file that starts the app.",
            "env_variable": "PY_FILE",
            "default_value": "app.py",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Additional Python packages",
            "description": "Install additional python packages.\r\n\r\nUse spaces to separate",
            "env_variable": "PY_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Requirements file",
            "description": "if there are other requirements files to choose from.",
            "env_variable": "REQUIREMENTS_FILE",
            "default_value": "requirements.txt",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Channel ID",
            "description": "The channel you want the chatbot to respond to messages in (To disable channel whitelist set this to \"none\" (not case-sensitive).",
            "env_variable": "channel_id",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "OpenAI API Key",
            "description": "Your OpenAI Account's API Key",
            "env_variable": "openai_api_key",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:100",
            "field_type": "text"
        },
        {
            "name": "Discord Bot Token",
            "description": "Your Discord Bot's Bot Token",
            "env_variable": "discord_bot_token",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:100",
            "field_type": "text"
        },
        {
            "name": "Bot Name",
            "description": "What name you want to call your bot with; you'll send the bot a message that you want it to respond to with \"Hey \" and the name of the bot.",
            "env_variable": "bot_name",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Debug",
            "description": "Whether the program should be in debug mode or not, giving more output.",
            "env_variable": "debug",
            "default_value": "False",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        }
    ]
}
